# Build stage
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache gcc musl-dev sqlite-dev

WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the API binary
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o job-executor-api ./cmd/api

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates openssh-client postgresql-client

WORKDIR /root/

# Copy the binary from builder stage
COPY --from=builder /app/job-executor-api .

# Copy web assets
COPY web/ ./web/

# Create data and pem-files directories
RUN mkdir -p /app/data /app/pem-files

EXPOSE 8080

CMD ["./job-executor-api"]
