services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: job-executor-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: jobexecutor
      POSTGRES_USER: jobexecutor
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--auth-host=md5"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployment/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - job-executor-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobexecutor -d jobexecutor"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # NetQueue Custom Queue Service
  netqueue:
    build:
      context: .
      dockerfile: Dockerfile.queue
    container_name: job-executor-netqueue
    ports:
      - "9000:9000"
    networks:
      - job-executor-network
    restart: unless-stopped

  # Job Executor API Service
  job-executor-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: job-executor-api
    ports:
      - "8080:8080"
    environment:
      - NETQUEUE_ADDR=netqueue:9000
      - DATABASE_URL=postgres://jobexecutor:password123@postgres:5432/jobexecutor?sslmode=disable
      - SERVER_ADDR=:8080
      - PEM_UPLOAD_DIR=/app/pem-files
      - AWS_ACCESS_KEY_ID=your-access-key-id
      - AWS_SECRET_ACCESS_KEY=your-secret-access-key
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./data:/app/data
      - ./pem-files:/app/pem-files
    depends_on:
      postgres:
        condition: service_healthy
      netqueue:
        condition: service_started
    networks:
      - job-executor-network
    restart: unless-stopped

  # Job Executor Worker Service
  job-executor-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: job-executor-worker
    environment:
      - NETQUEUE_ADDR=netqueue:9000
      - DATABASE_URL=postgres://jobexecutor:password123@postgres:5432/jobexecutor?sslmode=disable
      - PEM_FILES_DIR=/app/pem-files
      - AWS_ACCESS_KEY_ID=your-access-key-id
      - AWS_SECRET_ACCESS_KEY=your-secret-access-key
      - AWS_DEFAULT_REGION=us-east-1
      - LOG_LEVEL=debug
      - WORKER_CONCURRENCY=10
      - ENV=production
    volumes:
      - ./data:/app/data
      - ./pem-files:/app/pem-files
    depends_on:
      postgres:
        condition: service_healthy
      netqueue:
        condition: service_started
    networks:
      - job-executor-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f job-executor-worker || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend
  # job-executor-frontend:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.frontend
  #   container_name: job-executor-frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:8080
  #     - NODE_ENV=production
  #   depends_on:
  #     - job-executor-api
  #   networks:
  #     - job-executor-network
  #   restart: unless-stopped

  # Nginx Reverse Proxy (Optional - for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: job-executor-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - job-executor-api
  #     - job-executor-frontend
  #   networks:
  #     - job-executor-network
  #   restart: unless-stopped
  #   profiles:
  #     - production

volumes:
  postgres_data:
    driver: local

networks:
  job-executor-network:
    driver: bridge
